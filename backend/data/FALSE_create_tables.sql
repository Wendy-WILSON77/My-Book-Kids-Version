BEGIN;

DROP TABLE IF EXISTS "user", "book", "notice", "list", "category", "author", "book_has_category", "list_has_book", "user_has_list", "user_read_book", "user_like_book", "user_dislike_book";

CREATE TABLE "user" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "email" VARCHAR(225) NOT NULL UNIQUE,
    "surname" VARCHAR(100) NOT NULL,
    "name" VARCHAR(100) NOT NULL,
    "pseudo" VARCHAR(30) NOT NULL,
    "isAdmin" BOOLEAN DEFAULT FALSE NOT NULL,
    "password" VARCHAR(225) NOT NULL,
    "date_inscription" DATE DEFAULT NOW()
);

CREATE TABLE "author" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "surname" VARCHAR(100) NOT NULL,
    "name" VARCHAR(100) NOT NULL
);

CREATE TABLE "book" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "title" TEXT NOT NULL,
    "description" TEXT NULL,
    "date_of_publication" date NULL,
    "ISBN" VARCHAR(13) UNIQUE NULL,
    "cover_image" TEXT NULL,
    "author_id" INT NOT NULL REFERENCES "author"("id")
);

CREATE TABLE "notice" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "like" BOOLEAN NULL,
    "commentary" TEXT NULL,
    "date" DATE DEFAULT NOW(),
    "user_id" INT NOT NULL REFERENCES "user"("id"),
    "book_id" INT NOT NULL REFERENCES "book"("id")
    
);

CREATE TABLE "list" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "title" TEXT NOT NULL,
    "category_name" VARCHAR(255) NOT NULL,
    "user_id" INT NOT NULL REFERENCES "user"("id") -- ajout r√©cent
);

CREATE TABLE "category" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "category_name" VARCHAR(255) NOT NULL
);


CREATE TABLE "book_has_category" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "category_id" INT NOT NULL REFERENCES "category"("id"),
    "book_id" INT NOT NULL REFERENCES "book"("id")
);

CREATE TABLE "list_has_book" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "book_id" INT NOT NULL REFERENCES "book"("id"),
    "list_id" INT NOT NULL REFERENCES "list"("id")
);

CREATE TABLE "user_read_book" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "user_id" INT NOT NULL REFERENCES "user"("id"),
    "book_id" INT NOT NULL REFERENCES "book"("id")
);

CREATE TABLE "user_like_book" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "user_id" INT NOT NULL REFERENCES "user"("id"),
    "book_id" INT NOT NULL REFERENCES "book"("id")
);

COMMIT;